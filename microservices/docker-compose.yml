services:
  # ==================== DATABASE ====================

  # MongoDB for user and email services
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==================== BACKEND SERVICES ====================

  # User authentication service
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8004:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB=user_service_db
      - PYTHONUNBUFFERED=1
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # Email management service
  email-service:
    build:
      context: ./email-service
    container_name: email-service
    ports:
      - "8003:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB=email_service_db
      - USER_SERVICE_URL=http://email-service:8000
      - PYTHONUNBUFFERED=1
    depends_on:
      mongo:
        condition: service_healthy
      user-service:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  # ==================== API GATEWAY ====================

  # API Gateway - Central routing service
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    environment:
      - USER_SERVICE_URL=http://user-service:8000
      - EMAIL_SERVICE_URL=http://email-service:8000
      - PYTHONUNBUFFERED=1
    depends_on:
      - user-service
      - email-service
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# ==================== NETWORKING ====================
networks:
  app-network:
    driver: bridge

# ==================== VOLUMES ====================
volumes:
  mongo_data:
